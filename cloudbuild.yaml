# Cloud Build configuration for Event Stream Engine CI/CD

steps:
  # Step 1: Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/event-stream-engine:${BUILD_ID}'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/event-stream-engine:latest'
      - '.'
    id: 'build-image'

  # Step 2: Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '--all-tags'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/event-stream-engine'
    id: 'push-image'
    waitFor: ['build-image']

  # Step 3: Run tests (optional)
  - name: '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/event-stream-engine:${BUILD_ID}'
    entrypoint: 'python'
    args: ['-m', 'pytest', 'tests/', '-v']
    id: 'run-tests'
    waitFor: ['push-image']
    env:
      - 'FLASK_ENV=testing'
      - 'DATABASE_URL=sqlite:///test.db'
      - 'REDIS_URL=redis://localhost:6379/1'

  # Step 4: Deploy to Cloud Run (production)
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image=${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/event-stream-engine:${BUILD_ID}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated'
    id: 'deploy-service'
    waitFor: ['run-tests']

# Substitution variables
substitutions:
  _REGION: 'us-central1'
  _REPOSITORY: 'event-stream-engine-prod-containers'
  _SERVICE_NAME: 'event-stream-engine-prod-web'

# Options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

# Timeout
timeout: '1200s'

# Images to store in Artifact Registry
images:
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/event-stream-engine:${BUILD_ID}'
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/event-stream-engine:latest'